name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout to repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Grant execute permission for Gradle wrapper
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract version from Git tags
      id: version
      run: |
        # Get the latest tag, increment it, or start with 1.0.0
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
        IFS='.' read -r major minor patch <<< "${latest_tag}"
        patch=${{ github.run_number }}
        new_tag="$major.$minor.$patch"
        echo "version=$new_tag"
        echo "version=$new_tag" >> $GITHUB_OUTPUT

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Images
      id: push_docker
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ steps.version.outputs.version }}
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest

    - name: Create Git Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "gh_actions"
        git config user.email "gh_actions@users.noreply.github.com"
        git tag v${{ steps.version.outputs.version }}
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
        git push origin v${{ steps.version.outputs.version }}
